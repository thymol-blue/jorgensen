geom_bar(stat = "identity") #removes y axis of class
ggplot(data, aes(x = Year, y = Count, fill = factor(Class, levels=c("Carbon", "Sulfur", "Both", "Other")))) +
geom_bar(stat = "identity") #removes y axis of class
ggplot(data, aes(x = Year, y = Count, fill = factor(Class, levels=c("Carbon", "Sulfur", "Both", "Other")))) +
geom_bar(stat = "identity") + #removes y axis of class
labs(fill = "Drive")
ggplot(data, aes(x = Year, y = Count, fill = Class)) +
geom_col() +
coord_polar(theta = "y")
ggplot(data, aes(x = Year, y = value, fill = Class)) +
geom_col() +
coord_polar(theta = "y")
ggplot(data, aes(x = "", y = Count, fill = Class)) +
geom_col() +
coord_polar(theta = "y")
?labs
# Pie Chart
ggplot(data, aes(x = "", y = Count, fill = factor(Class, levels=c("Carbon", "Sulfur", "Both", "Other")))) +
geom_col() +
coord_polar(theta = "y")
# Pie Chart
ggplot(data, aes(x = "", y = Count, fill = factor(Class, levels=c("Carbon", "Sulfur", "Both", "Other")))) +
geom_col() +
coord_polar(theta = "y") +
labs(fill = "Class") # Adds a legend header
# Pie Chart
ggplot(data, aes(x = "", y = Count, fill = factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other")))) +
geom_col() +
coord_polar(theta = "y") +
labs(fill = "Class") # Adds a legend header
# Violin
ggplot(data, aes(x=Count, y=Year, fill=Class)) +
geom_violin()
# Swapped Violin
mutate(text = fct_reorder(text, value)) %>% # Reorder data
ggplot( aes(x=Count, y=Year, fill=Class, color=Class)) +
geom_violin(width=2.1, size=0.2) +
scale_fill_viridis(discrete=TRUE) +
scale_color_viridis(discrete=TRUE) +
theme_ipsum() +
theme(
legend.position="none"
) +
coord_flip() + # This switch X and Y axis and allows to get the horizontal version
xlab("") +
ylab("Assigned Probability (%)")
# WIDE Violin hahahaha
ggplot(data, aes(x=Count, y=Year, fill=Class)) +
geom_violin()
# Swapped Violin
ggplot( aes(x=Count, y=Year, fill=Class, color=Class)) +
geom_violin(width=2.1, size=0.2) +
scale_fill_viridis(discrete=TRUE) +
scale_color_viridis(discrete=TRUE) +
theme_ipsum() +
theme(
legend.position="none"
) +
coord_flip() + # This switch X and Y axis and allows to get the horizontal version
xlab("") +
ylab("Assigned Probability (%)")
# Swapped Violin
ggplot(data, aes(x=Count, y=Year, fill=Class, color=Class)) +
geom_violin(width=2.1, size=0.2) +
scale_fill_viridis(discrete=TRUE) +
scale_color_viridis(discrete=TRUE) +
theme_ipsum() +
theme(
legend.position="none"
) +
coord_flip() + # This switch X and Y axis and allows to get the horizontal version
xlab("") +
ylab("Assigned Probability (%)")
# Swapped Violin
ggplot(data, aes(x=Count, y=Year, fill=Class, color=Class)) +
geom_violin(width=2.1, size=0.2) +
coord_flip() + # This switch X and Y axis and allows to get the horizontal version
xlab("") +
ylab("Assigned Probability (%)")
# Swapped Violin
ggplot(data, aes(x=Count, y=Year, fill=Class)) +
geom_violin(width=2.1, size=0.2) +
coord_flip() + # This switch X and Y axis and allows to get the horizontal version
xlab("") +
ylab("Assigned Probability (%)")
# Swapped Violin
ggplot(data, aes(x=Count, y=Year, fill=Class)) +
geom_violin(width=1.1, size=0.2) +
coord_flip() + # This switch X and Y axis and allows to get the horizontal version
xlab("") +
ylab("Assigned Probability (%)")
?geom_violin
# Swapped Violin
ggplot(data, aes(Year, Class)) +
geom_violin()
data <- read_xlsx("Jorgenson.xlsx") # import data from xlsx
# Swapped Violin
ggplot(data, aes(Year, Class)) +
geom_violin()
# WIDE Violin hahahaha
ggplot(data, aes(x=Count, y=Year, fill=Class)) +
geom_violin()
# Swapped Violin
ggplot(data, aes(Year, Class)) +
geom_violin()
# WIDE Violin hahahaha
ggplot(data, aes(x=Year, y=Count, fill=Class)) +
geom_violin()
# Swapped Violin
ggplot(data, aes(Year, Count, Class)) +
geom_violin()
# Swapped Violin
ggplot(data, aes(Year, Count)) +
geom_violin()
# Swapped Violin
ggplot(data, aes(x= "", y=Count)) +
geom_violin()
# Swapped Violin
ggplot(data, aes(x = Year, y = Count, fill = factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other")))) + #Forces manual ordering rather than alphabetical of legend
geom_violin(stat = "identity") + #removes y axis of class
labs(fill = "Class") # Adds a legend header
# Swapped Violin
ggplot(data, aes(x = Year, y = Count, fill = factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other")))) + #Forces manual ordering rather than alphabetical of legend
geom_violin() + #removes y axis of class
labs(fill = "Class") # Adds a legend header
install.packages(ggridges)
install.packages("ggridges")
library("ggridges")  # Add ridge plots.
# Swapped Violin
ggplot(data, aes(x = Year, y = Class, fill = Class)) +
geom_density_ridges() +
theme_ridges() +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x = Year, y = Class, fill = Class)) +
geom_density_ridges() +
theme_ridges() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
# Swapped Violin
ggplot(data, aes(x = Year, y = Count, fill = Count)) +
geom_density_ridges() +
theme_ridges() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
# Swapped Violin
ggplot(data, aes(x = Year, y = Count, fill = Count)) +
geom_density_ridges() +
theme_ridges() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
# Swapped Violin
ggplot(data, aes(x = Year, y = Count, fill = Class)) +
geom_density_ridges() +
theme_ridges() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
# Swapped Violin
ggplot(data, aes(x = Year, y = Class, fill = Class)) +
geom_density_ridges() +
theme_ridges() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)
# Swapped Violin
ggplot(data, aes(x = Year, y = Class, fill = Class)) +
geom_density_ridges() +
theme_ridges() +
theme()
# Swapped Violin
ggplot(data, aes(x = Year, y = Class, fill = Class)) +
geom_density_ridges() +
theme_ridges() +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x = Year, y = Class, fill = Class)) +
geom_density_ridges(bandwidth = 0.1) +
theme_ridges() +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x = Year, y = Class, fill = Class)) +
geom_density_ridges(bandwidth = 0.5) +
theme_ridges() +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x = Year, y = Class, fill = Class)) +
geom_density_ridges(bandwidth = 0.3) +
theme_ridges() +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x = Year, y = Class, fill = Class)) +
geom_density_ridges2(bandwidth = 0.3) +
theme_ridges() +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x = Year, y = Class, fill = Class)) +
geom_density_ridges(bandwidth = 0.3) +
theme_ridges() +
theme(legend.position = "none")
d <- data.frame(
x = rep(1:5, 3),
y = c(rep(0, 5), rep(1, 5), rep(2, 5)),
height = c(0, 1, 3, 4, 0, 1, 2, 3, 5, 4, 0, 5, 4, 4, 1)
)
view(d)
view(data)
# Swapped Violin
ggplot(data, aes(x = Year, y = Class, group = Class, height = Count)) +
geom_density_ridges(bandwidth = 0.3) +
theme_ridges() +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x = Year, y = Class, group = Class)) +
geom_density_ridges(bandwidth = 0.3) +
theme_ridges() +
theme(legend.position = "none")
ggplot(data, aes(x=Year)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8)
ggplot(data, aes(x=Year, y=Count)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8)
# Swapped Violin
ggplot(data, aes()) +
geom_density(adjust=1.5, position="fill") +
theme_ipsum()
# Swapped Violin
ggplot(data, aes()) +
geom_density(adjust=1.5, position="fill") +
# Swapped Violin
ggplot(data, aes(x=Year,y=Count,fill=Class)) +
geom_density(adjust=1.5, position="fill") +
# Swapped Violin
ggplot(data, aes(x=Year,y=Count,fill=Class)) +
geom_density(adjust=1.5, position="fill")
# Swapped Violin
ggplot(data, aes(x = Year, y = Count, fill = Class)) +
geom_density(adjust=1.5, position="fill")
# Swapped Violin
ggplot(data, aes(x = Year, y = Count, fill = Class)) +
geom_density(stat = "identity")
# Swapped Violin
ggplot(data, aes(x = Year, y = Count, fill = Class)) +
geom_density_ridges() +
geom_density(stat = "identity")
# Swapped Violin
ggplot(data, aes(x = Year, y = Count, fill = Class)) +
geom_density_ridges(stat = "identity")
# Swapped Violin
ggplot(data, aes(x = Year, y = Count, fill = Class)) +
geom_density_ridges()
# Swapped Violin
ggplot(data, aes(x = Year, y = Count, fill = Class)) +
geom_density(stat = "identity")
# Swapped Violin
ggplot(data, aes(x = Year, y = Count, fill = Class)) +
geom_density_ridges() +
theme_ridges() +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x = Year, y = Class, fill = Class)) +
geom_density_ridges() +
theme_ridges() +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x = Year, y = Class, fill = Class, height = Count)) +
geom_density_ridges() +
theme_ridges() +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x = Year, y = Class, fill = Class)) +
geom_density_ridges(height = Count) +
theme_ridges() +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x=Year, y=Class, height = Count)) + geom_ridgeline()
# Swapped Violin
ggplot(data, aes(x=Year, y=Class, height = Count))+
geom_ridgeline()
# Swapped Violin
ggplot(data, aes(x=Year, y=Class, height = Count, fill = factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other"))))+
geom_ridgeline()
# Swapped Violin
ggplot(data, aes(x=Year, y=Class, height = Count, fill = factor(Class, levels=c("Carbon", "Sulfur", "Both", "Other"))))+
geom_ridgeline()
# Swapped Violin
ggplot(data, aes(x=Year, y=Class, height = Count, fill = factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other"))))+
geom_ridgeline()
# Swapped Violin
ggplot(data, aes(x=Year, y=Class, height = Count, fill = factor(Class, levels=c("Carbon", "Sulfur", "Both", "Other"))))+
geom_ridgeline()
# Swapped Violin
ggplot(data, aes(x=Year, y=Class, height = Count, fill = factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other"))))+
geom_ridgeline()
# Stacked box plot
ggplot(data, aes(x = Year, y = Count, fill = factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other")))) + #Forces manual ordering rather than alphabetical of legend
geom_bar(stat = "identity") + #removes y axis of class
labs(fill = "Class") # Adds a legend header
# Stacked box plot
ggplot(data, aes(x = Year, y = Count, fill = factor(Class, levels=c("Other", "Carbon", "Both", "Sulfur")))) + #Forces manual ordering rather than alphabetical of legend
geom_bar(stat = "identity") + #removes y axis of class
labs(fill = "Class") # Adds a legend header
# Stacked box plot
ggplot(data, aes(x = Year, y = Count, fill = factor(Class, levels=c("Other", "Carbon", "Sulfur", "Carbon")))) + #Forces manual ordering rather than alphabetical of legend
geom_bar(stat = "identity") + #removes y axis of class
labs(fill = "Class") # Adds a legend header
# Stacked box plot
ggplot(data, aes(x = Year, y = Count, fill = factor(Class, levels=c("Other", "Both", "Sulfur", "Carbon")))) + #Forces manual ordering rather than alphabetical of legend
geom_bar(stat = "identity") + #removes y axis of class
labs(fill = "Class") # Adds a legend header
# Stacked box plot
ggplot(data, aes(x = Year, y = Count, fill = factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other")))) + #Forces manual ordering rather than alphabetical of legend
geom_bar(stat = "identity") + #removes y axis of class
labs(fill = "Class") # Adds a legend header
# Swapped Violin
ggplot(data, aes(x=Year, y=Class, height = Count, fill = factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other"))))+
geom_ridgeline()
# Swapped Violin
ggplot(data, aes(x=Year, y=Class, height = Count, fill = factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other"))))+
geom_ridgeline()+
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x=Year, y=Class, height = Count, fill = factor(Class, levels=c("Carbon", "Sulfur", "Both", "Other"))))+
geom_ridgeline()+
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x=Year, y=Class, height = Count, fill = factor(Class, levels=c("Carbon", "Sulfur", "Both", "Other"))))+
geom_density_ridges(stat = "identity", scale = 1) +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x=Year, y=Class, height = Count, fill = factor(Class, levels=c("Carbon", "Sulfur", "Both", "Other"))))+
geom_density_ridges2(stat = "identity", scale = 1) +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x=Year, y=Class, height = Count, fill = factor(Class, levels=c("Carbon", "Sulfur", "Both", "Other"))))+
geom_density_ridges(stat = "identity", scale = 1) +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x=Year, y=Class, fill = factor(Class, levels=c("Carbon", "Sulfur", "Both", "Other"))))+
geom_density_ridges(stat = "identity", scale = 1) +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x=Year, y=Class, height = Count, fill = factor(Class, levels=c("Carbon", "Sulfur", "Both", "Other"))))+
geom_density_ridges(stat = "identity", scale = 1) +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x=Year, y=Class, height = Count, fill = Class))+
geom_density_ridges(stat = "identity", scale = 1) +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x=Year, y=factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other")), height = Count, fill = Class))+
geom_density_ridges(stat = "identity", scale = 1) +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x=Year, y=Class, height = Count, fill = Class))+
geom_density_ridges(stat = "identity", scale = 1) +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x=Year, y=Class, height = Count, fill = Class))+
geom_density_ridges(stat = "identity", scale = 0.5) +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x=Year, y=Class, height = Count, fill = Class))+
geom_density_ridges(stat = "identity", scale = 5) +
theme(legend.position = "none")
# Swapped Violin
mutate(method = fct_relevel(method, levels = "Sulfur", "Carbon", "Both", "Other")) %>%
ggplot(data, aes(x=Year, y=Class, height = Count, fill = Class))+
geom_density_ridges(stat = "identity", scale = 5) +
theme(legend.position = "none")
ggplot(data, aes(x=Year, y=factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other")), height = Count, fill = factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other"))))+
geom_density_ridges(stat = "identity", scale = 5) +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x=Year, y=Class, height = Count, fill = Class))+
geom_density_ridges(stat = "identity", scale = 5) +
theme(legend.position = "none")
ggplot(data, aes(x=Year, y=factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other")), height = Count, fill = factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other"))))+
geom_density_ridges(stat = "identity", scale = 5) +
theme(legend.position = "none")
ggplot(data, aes(x=Year, y=Class, height = Count, fill = factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other"))))+
geom_density_ridges(stat = "identity", scale = 5) +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x=Year, y=factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other")), height = Count, fill = Class))+
geom_density_ridges(stat = "identity", scale = 5) +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x=Year, y=factor(Class, levels=c("Other", "Both", "Sulfur", "Carbon")), height = Count, fill = Class))+
geom_density_ridges(stat = "identity", scale = 4) +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x=Year, y=factor(Class, levels=c("Other", "Both", "Sulfur", "Carbon")), height = Count, fill = Class))+
geom_density_ridges(stat = "identity", scale = 10) +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x=Year, y=factor(Class, levels=c("Other", "Both", "Sulfur", "Carbon")), height = Count, fill = Class))+
geom_density_ridges(stat = "identity", scale = 20) +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x=Year, y=factor(Class, levels=c("Both", "Other", "Sulfur", "Carbon")), height = Count, fill = Class))+
geom_density_ridges(stat = "identity", scale = 20) +
theme(legend.position = "none")
# Swapped Violin
ggplot(data, aes(x=Year, y=factor(Class, levels=c("Both", "Other", "Sulfur", "Carbon")), height = Count, fill = Class))+
geom_density_ridges(stat = "identity", scale = 20) +
theme(legend.position = "none") +
labs(fill = "Class") # Adds a legend header
# WIDE Violin hahahaha
ggplot(data, aes(x=Year, y=factor(Class, levels=c("Both", "Other", "Sulfur", "Carbon")), height = Count, fill = Class))+
geom_violin(stat = "identity", scale = 20) +
theme(legend.position = "none") +
labs(fill = "Class") # Adds a legend header
# WIDE Violin hahahaha
ggplot(data, aes(x=Year, y=factor(Class, levels=c("Both", "Other", "Sulfur", "Carbon")), height = Count, fill = Class))+
geom_violin(stat = "identity") +
theme(legend.position = "none") +
labs(fill = "Class") # Adds a legend header
# WIDE Violin hahahaha
ggplot(data, aes(x=Year, y=factor(Class, levels=c("Both", "Other", "Sulfur", "Carbon")), height = Count, fill = Class))+
geom_violin() +
theme(legend.position = "none") +
labs(fill = "Class") # Adds a legend header
?geom_violin
# Density Plot
ggplot(data, aes(x=Year, y=factor(Class, levels=c("Both", "Other", "Sulfur", "Carbon")), height = Count, fill = Class))+
geom_density_ridges(stat = "identity", scale = 20) +
theme(legend.position = "none") +
labs(fill = "Class") # Adds a legend header
# Density Plot
ggplot(data, aes(x=Year, y=factor(Class, levels=c("Both", "Other", "Sulfur", "Carbon")), height = Count, fill = Class))+
geom_density_ridges(stat = "identity", scale = 20) +
theme(legend.position = "none") +
labs(y = "Class") # Adds a legend header
# WIDE Violin hahahaha
ggplot(data, aes(x=Year, y=factor(Class, levels=c("Both", "Other", "Sulfur", "Carbon")), height = Count, fill = Class))+
geom_violin() +
theme(legend.position = "none") +
labs(fill = "Class") # Adds a legend header.
# Stacked Box Plot
ggplot(data, aes(x = Year, y = Count, fill = factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other")))) + #Forces manual ordering rather than alphabetical of legend
geom_bar(stat = "identity") + #removes y axis of class
labs(fill = "Class") # Adds a legend header
# Pie Chart
ggplot(data, aes(x = "", y = Count, fill = factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other")))) +
geom_col() +
coord_polar(theta = "y") +
labs(fill = "Class") # Adds a legend header.
# Pie Chart
ggplot(data, aes(x = "", y = Count, fill = factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other")))) +
geom_col() +
coord_polar(theta = "y") +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5)) +
labs(fill = "Class") # Adds a legend header.
# Pie Chart
ggplot(data, aes(x = "", y = Count, fill = factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other")))) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
labs(fill = "Class") # Adds a legend header.
# Pie Chart
ggplot(data, aes(x = "", y = Count, fill = factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other")))) +
geom_col() +
geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") +
labs(fill = "Class") # Adds a legend header.
# Pie Chart
ggplot(data, aes(x = "", y = Count, fill = factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other")))) +
geom_col() +
coord_polar(theta = "y") +
labs(fill = "Class") # Adds a legend header.
data <- read_xlsx("Jorgenson.xlsx") # import data from xlsx
# Stacked Box Plot
ggplot(data, aes(x = Year, y = Count, fill = factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other")))) + #Forces manual ordering rather than alphabetical of legend
geom_bar(stat = "identity") + #removes y axis of class
labs(fill = "Class") # Adds a legend header
# Pie Chart. Pie charts are boring maybe we can do a gridplot or something?
ggplot(data, aes(x = "", y = Count, fill = factor(Class, levels=c("Sulfur", "Carbon", "Both", "Other")))) +
geom_col() +
coord_polar(theta = "y") +
labs(fill = "Class") # Adds a legend header.
# Why is it so WIDE! Also why are all of the data the SAMEEEEEE. Violin plot would look really cool though.
ggplot(data, aes(x=Year, y=factor(Class, levels=c("Both", "Other", "Sulfur", "Carbon")), height = Count, fill = Class))+
geom_violin() +
theme(legend.position = "none") +
labs(fill = "Class") # Adds a legend header.
# Density Plot
ggplot(data, aes(x=Year, y=factor(Class, levels=c("Both", "Other", "Sulfur", "Carbon")), height = Count, fill = Class))+
geom_density_ridges(stat = "identity", scale = 20) +
theme(legend.position = "none") +
labs(y = "Class") # Renames-the Y axis.
# Why is it so WIDE! Also why are all of the data the SAMEEEEEE. Violin plot would look really cool though.
ggplot(data, aes(x=Year, y=factor(Class, levels=c("Both", "Other", "Sulfur", "Carbon")), height = Count, fill = Class))+
geom_violin() +
theme(legend.position = "none") +
labs(fill = "Class") # Adds a legend header.
